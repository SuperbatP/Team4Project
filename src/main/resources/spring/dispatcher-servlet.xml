<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <mvc:annotation-driven >
        <mvc:argument-resolvers>
            <bean class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver"></bean>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    <!-- HandlerAdapter, HandlerMaooing + 여러 가지에 관한 설정 하는 곳.   -->

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <!-- mapping은 url요청,  location은 webapp에서의 위치 -->
    <mvc:resources mapping="/resource/**" location="/resource/" />
    <!-- 우리가 만든 resources에 있는 것도 연결해줌. 보통 정적페이지...  -->

    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>


    <context:component-scan base-package="com.PhoenixHospital"  use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- component-scan :  use-default-filters="false"라 필터 사용 x  include-filter 는 내부-->

    <!-- member만 관리자에게 보여주는 interceptors 설정-->
<!--
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/member/**"/>
            &lt;!&ndash; 회원가입은 해야하니까 interceptors에서 제외&ndash;&gt;
            <mvc:exclude-mapping path="/member/memberForm.wow"/>
            <mvc:exclude-mapping path="/member/memberRegist.wow"/>
    <bean class="com.PhoenixHospital.common.util.ManagerCheckInterceptor" id="managerCheckInterceptor"></bean>
</mvc:interceptor>
</mvc:interceptors>

<mvc:interceptors>
<mvc:interceptor>
    <mvc:mapping path="/**"/>
     <bean class="com.PhoenixHospital.common.util.IPCheckInterceptor" id="ipCheckInterceptor"></bean>
</mvc:interceptor>
</mvc:interceptors>
-->

    <!-- never oauth2   -->
    <beans:bean id="naverClientID" class="java.lang.String">
        <beans:constructor-arg value="jZ_1xUzxk5o65AmHUZFn" />
    </beans:bean>
    <beans:bean id="naverClientSecret" class="java.lang.String">
        <beans:constructor-arg value="TRVoyUgZRs" />
    </beans:bean>
    <beans:bean id="naverRedirectUrl" class="java.lang.String">
        <beans:constructor-arg value="http://localhost:8081/auth/naver/callback" />
    </beans:bean>

    <beans:bean id="naverSns" class="com.PhoenixHospital.auth.SnsValue">
        <beans:constructor-arg value="naver" />
        <beans:constructor-arg ref="naverClientID" />
        <beans:constructor-arg ref="naverClientSecret" />
        <beans:constructor-arg ref="naverRedirectUrl" />
    </beans:bean>
    <!-- never oauth2 end  -->


    <!-- google oauth2   -->
    <beans:bean id="googleClientID" class="java.lang.String">
        <beans:constructor-arg value="794591433694-htaq7ljfojo7dnh14hpu8m52qkp1h6rj.apps.googleusercontent.com" />
    </beans:bean>
    <beans:bean id="googleClientSecret" class="java.lang.String">
        <beans:constructor-arg value="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" />
    </beans:bean>
    <beans:bean id="googleRedirectUrl" class="java.lang.String">
        <beans:constructor-arg value="http://localhost:8081/auth/google/callback" />
    </beans:bean>

    <beans:bean id="googleSns" class="com.PhoenixHospital.auth.SnsValue">
        <beans:constructor-arg value="google" />
        <beans:constructor-arg ref="googleClientID" />
        <beans:constructor-arg ref="googleClientSecret" />
        <beans:constructor-arg ref="googleRedirectUrl" />
    </beans:bean>


    <beans:bean id="googleConnectionFactory"
                class="org.springframework.social.google.connect.GoogleConnectionFactory">
        <beans:constructor-arg ref="googleClientID" />
        <beans:constructor-arg ref="googleClientSecret" />
    </beans:bean>

    <beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
            <beans:property name="scope" value="https://www.googleapis.com/auth/drive.file" />

        <!--        <beans:property name="scope" value="https://www.googleapis.com/auth/userinfo.email" />-->
        <!-- <beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" /> -->
        <beans:property name="redirectUri" ref="googleRedirectUrl" />
    </beans:bean>


    <!-- interface multipartResolver의 구현체가 2개 있는데 CommonsMultipartResolver(스프링 3버전) |
    StandardServletMultipartResolver(스프링5버전)   -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"></beans:bean>
<!-- 원래 id는 마음대로 할 수 있지만 여기는 무조건 multipartResolver로 해야함. 스프링 내부적으로 사용하는 이름이 정해져 있음.   -->
</beans>