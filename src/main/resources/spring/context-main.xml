<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <context:component-scan base-package="com.PhoenixHospital"
                            use-default-filters="true">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    <!-- component-scan : 기본적으로  @Component, @Repository, @Service,
	@Controller, @RestController, @ControllerAdvice, and @Configuration를 bean으로 등록하는데 Controller를 제외한다.
	  @Controller, @RestController, @ControllerAdvice 는 셋 다 Controller라 제외됨.-->

    <!-- properties파일 읽은 프로퍼티 객체, DB말고도 여러가지 작성할 거라 main에 빈등록 -->
    <util:properties id="util"
                     location="/WEB-INF/classes/spring/appconfig.properties" />


    <!-- ContextLoaderListenr 빈 중 DB관련 빈들 등록 -->
    <!-- pdf 8페이지 , commons.dbcp대신 commons.dbcp2, name=" driverClassName " 띄어쓰기
        주의 -->
    <bean id="dataSource"
          class="org.apache.commons.dbcp2.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName"
                  value="#{util['jdbc.driverClassName']}" />
        <property name="url" value="#{util['jdbc.url']}" />
        <property name="username" value="#{util['jdbc.username']}" />
        <property name="password" value="#{util['jdbc.password']}" />
        <property name="defaultAutoCommit"
                  value="#{util['jdbc.defaultAutoCommit']}" />
    </bean>

    <!-- SqlSession setup for MyBatis Database Layer -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation"
                  value="/WEB-INF/classes/mybatis/mybatis-config.xml" />
        <property name="mapperLocations"
                  value="/WEB-INF/classes/mybatis/mapper/*.xml" />
    </bean>

    <!-- 이메일 보내기 관련 git에 올릴때 조심할 것.  -->
    <bean id="mailSender"
          class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="username" value="nextitproject1213@gmail.com" />  <!--나는 hch930620@gmail.com  -->
        <property name="password" value="xglm nitx supx aogc" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
                <prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>
        </property>
    </bean>

<!-- component-scan의 scan은 @Compent, @Controller 등등만 스캔. mybatis @인 @Mapper는 component-scan이 스캔안함.
 그래서 따로 mybatis-sprig scan을 통해 스캔-->
    <mybatis-spring:scan base-package="com.PhoenixHospital"
                         annotation="org.apache.ibatis.annotations.Mapper" />



</beans>